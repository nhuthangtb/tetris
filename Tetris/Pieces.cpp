#include <iostream>
#include "Pieces.h"
using namespace std;

	
int pieces[7][4][4][4] = {
	{
		{
			// I
			{0,1,0,0},
			{0,1,0,0},
			{0,1,0,0},
			{0,1,0,0}
		},
		{
			// I
			{0,0,0,0},
			{1,1,1,1},
			{0,0,0,0},
			{0,0,0,0}
		},
		{   // I
			{0,1,0,0},
			{0,1,0,0},
			{0,1,0,0},
			{0,1,0,0}
		},
		{
			// I
			{0,0,0,0},
			{1,1,1,1},
			{0,0,0,0},
			{0,0,0,0}
		}
	},


{
	{
		// L
		{0,0,0,0},
		{0,1,1,0},
		{0,1,0,0},
		{0,1,0,0}
	},
	{
		// L
		{0,0,0,0},
		{1,1,1,0},
		{0,0,1,0},
		{0,0,0,0}
	},
	{
		// L
		{0,0,1,0},
		{0,0,1,0},
		{0,1,1,0},
		{0,0,0,0}
	},
{
		// L
		{0,0,0,0},
		{1,0,0,0},
		{1,1,1,0},
		{0,0,0,0}
	}
},
{
	{
		// L-reverse
		{0,0,0,0},
		{0,1,1,0},
		{0,0,1,0},
		{0,0,1,0}
	},
	{
		// L-reverse
		{0,0,0,0},
		{0,0,1,0},
		{1,1,1,0},
		{0,0,0,0}
	},
	{
		// L-reverse
		{0,1,0,0},
		{0,1,0,0},
		{0,1,1,0},
		{0,0,0,0}
	}
},
{
	{
		//N
		{0,0,1,0},
		{0,1,1,0},
		{0,1,0,0},
		{0,0,0,0}
	},
	{
		//N
		{1,1,0,0},
		{0,1,1,0},
		{0,0,0,0},
		{0,0,0,0}
	},
	{
		//N
		{0,1,0,0},
		{0,1,1,0},
		{0,0,1,0},
		{0,0,0,0}
	},
	{
		//N
		{0,0,1,1},
		{0,1,1,0},
		{0,0,0,0},
		{0,0,0,0}
	}
},
{
	{
		//N-reverse
		{0,1,0,0},
		{0,1,1,0},
		{0,0,1,0},
		{0,0,0,0}
	},
	{
		//N-reverse
		{0,0,0,0},
		{0,1,1,0},
		{1,1,0,0},
		{0,0,0,0}
	},
	{
		//N-reverse
		{1,0,0,0},
		{1,1,0,0},
		{0,1,0,0},
		{0,0,0,0}
	},
	{
		//N-reverse
		{0,1,1,0},
		{1,1,0,0},
		{0,0,0,0},
		{0,0,0,0}
	}
},
{
	{
		//T
		{0,0,1,0},
		{0,1,1,0},
		{0,0,1,0},
		{0,0,0,0}
	},
	{
		//T
		{0,0,0,0},
		{0,1,1,1},
		{0,0,1,0},
		{0,0,0,0}
	},
	{
		//T
		{0,0,1,0},
		{0,1,1,0},
		{0,0,1,0},
		{0,0,0,0}
	},
	{
		//T
		{0,0,1,0},
		{0,1,1,1},
		{0,0,0,0},
		{0,0,0,0}
	},
},
{
	{
		//O-reverse
		{0,0,0,0},
		{0,1,1,0},
		{0,1,1,0},
		{0,0,0,0}
	},
	{
		//O-reverse
		{0,0,0,0},
		{0,1,1,0},
		{0,1,1,0},
		{0,0,0,0}
	},{
		//O-reverse
		{0,0,0,0},
		{0,1,1,0},
		{0,1,1,0},
		{0,0,0,0}
	},{
		//O-reverse
		{0,0,0,0},
		{0,1,1,0},
		{0,1,1,0},
		{0,0,0,0}
	},
}
};

int Pieces::GetBlockType(int piece, int rotation, int px, int py) {
	
	return pieces[piece][rotation][px][py];
}


//int Pieces::Rotate(int px, int py, int r) {
//	switch (r % 4) {
//	case 1:return py * 4 + px;
//	case 2: return 12 + py - (px *4);
//	case 3: return 15 - (py * 4) - px;
//	case 4: return 3 + py + (px*4);
//	}
//	return 0;
//}


